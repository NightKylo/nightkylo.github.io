{
    "data": [
      {
        "Name": "Rent a girlfriend",
        "Aliases": [
          "Rent a gf"
        ],
        "Language": "en",
        "RawURL": "https://cdn.kanojo-okarishimasu.com/file/CDN-M-A-N/{CHAPTER_PREFIX}{CHAPTER_NUMBER}/{IMAGE_NUMBER}.{IMAGE_TYPE}",
        "MethodCode": [
          "        public static string URL(int chapterNumber, string imageNumber)",
          "        {",
          "            Manga manga = Json.ReadObjectFromJsonFile<Wrapper<Manga>>(\"data.json\").data.First( i => i.Name == \"Rent a girlfriend\");",
          "            if(chapterNumber >= 172 && chapterNumber <= 175)",
          "            {",
          "                while(imageNumber.Length != 2)",
          "                    imageNumber = \"0\" + imageNumber;",
          "                return manga.RawURL.Replace(\"{CHAPTER_PREFIX}{CHAPTER_NUMBER}/\", \"kanojokorean_\" + chapterNumber.ToString() + \"_\").Replace(\"{IMAGE_NUMBER}\", imageNumber).Replace(\"{IMAGE_TYPE}\", \"jpg\");",
          "            }",
          "            while(imageNumber.Length != 3)",
          "                imageNumber = \"0\" + imageNumber;",
          "            var url = manga.RawURL.Replace(\"{CHAPTER_NUMBER}\", chapterNumber.ToString()).Replace(\"{IMAGE_NUMBER}\", imageNumber);",
          "            if(chapterNumber >= 176)",
          "                url = url.Replace(\"{CHAPTER_PREFIX}\", \"kanojo_\");",
          "            else",
          "                url = url.Replace(\"{CHAPTER_PREFIX}\", \"kanojo/chap\");",
          "            url = chapterNumber >= 176 ? url.Replace(\"{IMAGE_TYPE}\", \"png\"): url.Replace(\"{IMAGE_TYPE}\", \"jpg\");",
          "            //MessageBox.Show(url);",
          "            return url;",
          "        }"
        ]
      },
      {
        "Name": "Attack on titan",
        "Aliases": [
          "Aot",
          "readshingeki no kyojin"
        ],
        "Language": "en",
        "RawURL": "https://cdn.readshingekinokyojin.com/file/mangap/5/{CHAPTER_NUMBER}/{IMAGE_NUMBER}.{IMAGE_TYPE}",
        "MethodCode": [
          "        public static string URL(int chapterNumber, string imageNumber)",
          "        {",
          "            Manga manga = Json.ReadObjectFromJsonFile<Wrapper<Manga>>(\"data.json\").data.First( i => i.Name == \"Attack on titan\");",
          "            var chapterNumberString = chapterNumber.ToString() + \"000\";",
          "            while(chapterNumberString.Length != 7)",
          "                chapterNumberString = \"0\" + chapterNumberString;",
          "            var url = manga.RawURL.Replace(\"{CHAPTER_NUMBER}\", \"1\" + chapterNumberString).Replace(\"{IMAGE_NUMBER}\", imageNumber);",
          "            return (int.Parse(chapterNumberString[..^3]) >= 129) ? url.Replace(\"{IMAGE_TYPE}\", \"jpeg\") : url.Replace(\"{IMAGE_TYPE}\", \"jpg\");",
          "        }"
        ]
      },
      {
        "Name": "The Quintessential Quintuplets",
        "Aliases": [
          "Quintuplets",
          "Gotoubun",
          "Miku",
          "Nino",
          "Yotsuba"
        ],
        "Language": "en",
        "RawURL": "https://cdn.readkakegurui.com/file/mangaifenzi22/_the_quintessential_quintuplets_chapter_{CHAPTER_NUMBER}/{IMAGE_NUMBER}.jpg",
        "MethodCode": [
          "        public static string URL(int chapterNumber, string imageNumber)",
          "        {",
          "            var manga = Json.ReadObjectFromJsonFile<Wrapper<Manga>>(\"data.json\").data.First(i => i.Name == \"The Quintessential Quintuplets\");",
          "            chapterNumber -= 1;",
          "            if(chapterNumber != 0)",
          "                imageNumber = (int.Parse(imageNumber) + 1).ToString();",
          "            while(imageNumber.Length != 3)",
          "                imageNumber = \"0\" + imageNumber;",
          "            var url = manga.RawURL.Replace(\"{CHAPTER_NUMBER}\", chapterNumber.ToString()).Replace(\"{IMAGE_NUMBER}\", imageNumber);",
          "            return url;",
          "        }"
        ]
      },
      {
        "Name": "Tonikaku Kawaii",
        "Aliases": [
          "Tonikaku Kawaii / Fly me to the moon",
          "Tonikawa",
          "Over the moon for you"
        ],
        "Language": "en",
        "RawURL": "https://cdn.readkakegurui.com/file/mangaifenzi22/tonikaku-Cawaii/Chapter-{CHAPTER_NAME}/{IMAGE_NUMBER}.{IMAGE_TYPE}",
        "MethodCode": [
          "        public static string URL(int chapterNumber, string imageNumber)",
          "        {",
          "            var manga = Json.ReadObjectFromJsonFile<Wrapper<Manga>>(\"data.json\").data.First(i => i.Name == \"Tonikaku Kawaii\");",
          "            var url = manga.RawURL.Replace(\"{IMAGE_NUMBER}\", imageNumber);",
          "            url = chapterString != \"16\"? url.Replace(\"{IMAGE_TYPE}, \"jpg\"): url.Replace(\"{IMAGE_TYPE}\", \"png\");",
          "            url = manga.AdditionalData.ContainsKey(chapterNumber.ToString()) ? url.Replace(\"{CHAPTER_NAME}\", chapterNumber.ToString() + manga.AdditionalData[chapterNumber.ToString()]) : url.Replace(\"{CHAPTER_NAME}\", chapterNumber.ToString());",
          "            return url;",
          "        }"
        ],
        "AdditionalData": {
          "7": "-:-I-Ll-Sleep-Even-Though-Luna-Chan-S-Telling-Me-To-Wake-Up",
          "9": "-i-want-my-kouhai-to-be-feisty-yeah-so-feisty-she",
          "13": ":-Things-Won-T-Look-Too-Good-If-You-Lose-To-That",
          "14": "-:-Promise",
          "15": ":-The-Brigade-Chief-Ordered-Me-Not-To-Stop%2c-But-I%E2%80%99M-Still-Here.-So-I-Wrote-This-Chapter-Nonstop."
        }
      },
      {
        "Name": "Domestic girlfriend",
        "Aliases": [
          "Domestic gf"
        ],
        "Language": "en",
        "RawURL": "https://cdn.readdetectiveconan.com/file/mangap/1026/{CHAPTER_NUMBER}/{IMAGE_NUMBER}.jpg",
        "MethodCode": [
          "        public static string URL(int chapterNumber, string imageNumber)",
          "        {",
          "            var manga = Json.ReadObjectFromJsonFile<Wrapper<Manga>>(\"data.json\").data.First(i => i.Name == \"Domestic girlfriend\");",
          "            var chapterNumberString = chapterNumber + \"000\";",
          "            while (chapterNumberString.Length != 7)",
          "                chapterNumberString = \"0\" + chapterNumberString;",
          "            var url = manga.RawURL.Replace(\"{CHAPTER_NUMBER}\", \"1\" + chapterNumberString).Replace(\"{IMAGE_NUMBER}\", imageNumber);",
          "            //MessageBox.Show(url);",
          "            return url;",
          "        }"
        ]
      }
    ]
  }
  